name: project2

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Install dependencies in project1
        working-directory: project1
        run: dart pub get

      - name: Install dependencies in project2
        working-directory: project2
        run: dart pub get

      - name: Run tests in project2
        working-directory: project2
        run: dart test --concurrency=1

  merge:
    needs: [build]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Remove dependency overrides
        working-directory: project2
        run: |
          pwd
          chmod +x remove_dependency_overrides.dart
          dart run remove_dependency_overrides.dart
          cat pubspec.yaml
          dart pub get

      - name: setup git config
        working-directory: project2
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        working-directory: project2
        run: |
          # Stage the file, commit and push
          git add pubspec.yaml
          git commit -m "remove dependency overrides"
          git push
